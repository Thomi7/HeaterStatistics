var RequestBrowser=new RequestBin,Growler=require("growler"),gui=require("nw.gui"),UI={status:$("#status"),request:$("#request"),server:{start:function(){UI.status.removeClass().addClass("online").empty()[0].innerHTML="Accepting requests at <a href='javascript:gui.Shell.openExternal(\"http://localhost:"+RequestBrowser.port.toString()+"\");'>http://localhost:"+RequestBrowser.port.toString()+"</a>"+(RequestBrowser.connecting?'<div class="hint--left hint--rounded" data-hint="Connecting to the internet...">Connecting...</div>':"<div class=\"hint--left hint--rounded\" data-hint=\"Make this available on the internet.\"><a href='#' id='connect'>Share</a></div>"),$("#connect").click(function(a){a.preventDefault(),RequestBrowser.share()})},stop:function(){UI.status.removeClass().addClass("offline").empty()[0].innerHTML="Offline"},timeout:function(){UI.status.removeClass().addClass("online").empty()[0].innerHTML="Accepting requests at <a href='javascript:gui.Shell.openExternal(\"http://localhost:"+RequestBrowser.port.toString()+"\");'>http://localhost:"+RequestBrowser.port.toString()+"</a>"+(RequestBrowser.connecting?'<div class="hint--left hint--rounded" data-hint="Connecting to the internet...">Connecting...</div>':"<div class=\"hint--left hint--rounded\" data-hint=\"Make this available on the internet.\"><span style='background-color: #AB4940;padding:3px 6px 3px 6px;border-radius:2px;color:#fff;margin-right:6px;'>Remote server timed out.</span><a href='#' id='connect'>Try Again</a></div>"),$("#connect").click(function(a){a.preventDefault(),RequestBrowser.share()}),UI.notify({title:"Connection Timeout",text:"The request bin timed out while connecting to the remote localtunnel sharing server."})},share:function(){UI.status.removeClass().addClass("public").empty()[0].innerHTML="Accepting requests at <a href='javascript:gui.Shell.openExternal(\""+RequestBrowser.publicUrl+"\");'>"+RequestBrowser.publicUrl+"</a><div class=\"hint--left hint--rounded\" data-hint=\"Stop internet sharing.\"><a href='#' id='disconnect'>Unshare</a></div>",$("#disconnect").click(function(a){a.preventDefault(),RequestBrowser.unshare()})},unshare:function(){UI.server.start()},request:function(a){UI.render.requestItem({method:a.method,source:a.source,time:new Date(a.timestamp)}),UI.notify({text:a.method.toUpperCase()+" request received from "+a.source,title:a.method.toUpperCase()+" Received"}),global.track.event("Webhook Receiver","request","Received "+a.method.toUpperCase()+" Request",1).send()}},render:{requestItem:function(a){var b=new Date(a.time);b=b.toLocaleDateString()+" "+b.toLocaleTimeString();var c='<div id="'+a.time.toJSON()+'" class="animated bounceIn"><span class="'+a.method.toLowerCase()+'">'+a.method.toUpperCase()+"</span><span>"+a.source+"</span><span>"+b+"</span>";$("body").hasClass("hasrequests")||$("body").addClass("hasrequests"),$("#requests").prepend(c),$("#requests > div").off("click").click(function(a){a.preventDefault(),$(a.currentTarget.parentNode).find(".selected").removeClass("selected"),$(a.currentTarget).addClass("selected"),UI.render.request(a.currentTarget.id)}),0===$("#requests > div.selected").length&&1===$("#requests > div").length&&($("#requests > div:first-child").addClass("selected"),UI.render.request(a.time.toJSON())),gui.Window.get(this).requestAttention(!0)},request:function(a){req=RequestBrowser.getRequestDetails(a),UI.request[0].setAttribute("method",req.method),UI.request[0].setAttribute("source",req.source);var b=req.headers.hasOwnProperty("content-type")&&req.headers["content-type"].toLowerCase().indexOf("json")>=0?"javascript":"markup";UI.request.empty()[0].innerHTML='<a href="#" id="showheader">Show Headers</a><div id="headers" class="hide animated">'+UI.render.headers(req.headers)+'</div><pre id="code" class="language-'+b+' line-numbers" style="background-color: transparent !important;"><code>'+UI.render.body(req.body)+"</code></pre>",Prism.highlightAll(),$("a.url-link").forEach(function(a){a.setAttribute("href",'javascript:gui.Shell.openExternal("'+a.getAttribute("href")+'");')}),$("#showheader").click(function(a){a.preventDefault(),UI.render.toggleHeader()}),$("#requests > div > span").off("click").click(function(a){a.preventDefault(),UI.render.request(a.currentTarget.parentNode.id)})},headers:function(a){var b='<table width="100%"><tbody><tr><th>Header</th><th>Value</th></tr>';return Object.keys(a).forEach(function(c){b+="<tr><td>"+c+":</td><td>"+a[c]+"</td></tr>"}),b+="</tbody></table>"},body:function(a){try{a=JSON.parse(a)}catch(b){console.log(b)}return"string"!=typeof a?JSON.stringify(a,null,2):a},showHeaders:function(){$("#headers").removeClass("hide"),$("#showheader")[0].innerHTML="Hide Headers",$("#headers").addClass("fadeInDown"),setTimeout(function(){$("#headers").removeClass("fadeInDown")},700)},hideHeaders:function(){$("#showheader")[0].innerHTML="Show Headers",$("#headers").addClass("fadeOutUp"),setTimeout(function(){$("#headers").addClass("hide"),$("#headers").removeClass("fadeOutUp")},700)},toggleHeader:function(){$("#headers").hasClass("hide")?UI.render.showHeaders():UI.render.hideHeaders()}},_growl:{app:new Growler.GrowlApplication("Fenix"),init:function(){UI._growl.app.setNotifications({Status:{displayname:"Fenix Receiver",enabled:!0,icon:require("fs").readFileSync("./lib/icons/webhooks.png")}}),UI._growl.app.register(),UI._growl.initialized=!0},initialized:!1},notify:function(a){UI._growl.initialized||UI._growl.init(),a=a||{},"string"==typeof a&&(a={text:a,title:"Fenix Alert"}),a.priority=a.priority||3,UI._growl.app.sendNotification(a.type||"Status",a)}};UI._growl.init(),RequestBrowser.on("ready",function(){RequestBrowser.start()}),RequestBrowser.on("start",UI.server.start),RequestBrowser.on("share",function(){UI.server.share.apply(this,arguments),UI.notify({title:"Fenix Receiver Shared",text:"The Fenix Receiver is now shared publicly."})}),RequestBrowser.on("unshare",function(){UI.server.unshare.apply(this,arguments),UI.notify({title:"Fenix Receiver Unshared",text:"The Fenix Receiver is no longer shared publicly."}),global.track.event("Webhook Receiver","unshare","Unshared Webhook Receiver",1).send()}),RequestBrowser.on("stop",function(){UI.server.stop.apply(this,arguments),UI.notify({title:"Fenix Receiver Stopped",text:"The Fenix Receiver server has stopped."})}),RequestBrowser.on("request",UI.server.request),RequestBrowser.on("connecting",UI.server.start),RequestBrowser.on("timeout",UI.server.timeout),global.windows.bin.on("autoshare",function(){RequestBrowser.share()});